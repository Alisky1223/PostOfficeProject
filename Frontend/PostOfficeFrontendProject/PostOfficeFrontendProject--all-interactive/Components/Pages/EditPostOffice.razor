@page "/EditPostOffice"
@using MudBlazor
@using System.Net.Http.Json
@using System.Globalization
@using System.Reflection
@using System.Threading
@using System.Diagnostics.Metrics
@using PostOfficeBackendProject.src.Application.Dto
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject IDialogService DialogService



<MudRTLProvider RightToLeft="@_rightToLeft">

    <MudItem Class="d-flex align-center justify-center mud-theme-primary mud-elevation-25" Style="height:60px; width:100%; margin-top:0px; margin-bottom:20px;">
        <MudText Typo="Typo.h5">ویرایش تصحیح کننده</MudText>
    </MudItem>

    <MudPaper Class="d-flex flex-wrap align-start justify-center gap-4" Style="margin-bottom:20px;padding:20px" Elevation="25">

        <MudItem Style="width:20%">
            <MudTextField @bind-Value="editCorretor" Label="شناسه تصحیح کننده" Variant="Variant.Outlined" Required></MudTextField>
        </MudItem>

        <MudItem Style="width:20%">
            <MudTextField @bind-Value="editCorretor" Label="شماره سریال تصحیح کننده" Variant="Variant.Outlined" Required></MudTextField>
        </MudItem>

        <MudItem Style="width:20%">
            <MudTextField @bind-Value="editCorretor" Label="تاریخ ساخت تصحیح کننده" Variant="Variant.Outlined" Required></MudTextField>
        </MudItem>

        <MudItem Style="width:20%">
            <MudTextField @bind-Value="editCorretor" Label="دامنه فشار تصحیح کننده" Variant="Variant.Outlined" Required></MudTextField>
        </MudItem>

        <MudItem Style="width:20%">
            <MudTextField @bind-Value="editCorretor" Label="دامنه دمای تصحیح کننده" Variant="Variant.Outlined" Required></MudTextField>
        </MudItem>



    </MudPaper>


    <MudPaper Elevation="0" Class="d-flex align-center" Style="margin-top:20px">

        <MudButton Style="margin-left:20px" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" OnClick="EditCorreector">ذخیره تغییرات</MudButton>

        <MudButton Variant="Variant.Filled" Color="Color.Secondary" Size="Size.Large" OnClick="CanceleOpration">لغو</MudButton>

        <MudButton Class="main-button" Variant="Variant.Filled" Color="Color.Tertiary" Size="Size.Large" OnClick="GoToMainPage">بازگشت به صفحه اصلی</MudButton>

    </MudPaper>

</MudRTLProvider>

<style>

    .main-button {
    position: fixed;
    left: 15px;
    }

</style>
@code {

    #region Props
    [Parameter]
    public int? selectedPostOfficeId { get; set; }

    private bool _rightToLeft = true;

    private int editCorretor;

    private PostOfficeDto EditedPostOffice = new PostOfficeDto();


    protected override async Task OnInitializedAsync()
    {
        // await GetData();
    }

    #endregion

    // #region Submit

    private async Task GetData()
    {
        EditedPostOffice = await correctorService.GetByIdAsync(correctorPassIdService.GetCorrectorId()) ?? new CorrectorDto();



        StateHasChanged();

    }

    // private async Task EditCorreector()

    // {

    //     var update = new CorrectorUpdateAndCreateDto
    //         {
    //             CorrectorSerialNumber = editCorretor.CorrectorSerialNumber,

    //             CorrectorManufactureDate = editCorretor.CorrectorManufactureDate,

    //             CorrectorPressureRange = editCorretor.CorrectorPressureRange,

    //             CorrectorTemperatureRange = editCorretor.CorrectorTemperatureRange,

    //         };


    //     await correctorService.UpdateCorrectorAsync(correctorPassIdService.GetCorrectorId(), update);

    //     Snackbar.Add("تغییرات با موفقیت ذخیره شد.", Severity.Success);

    //     NavigationManager.NavigateTo("/Corrector");

    // }

    // private void CanceleOpration()
    // {

    //     NavigationManager.NavigateTo("/Corrector");

    // }

    // #endregion

    #region GoToMainPage

    private void GoToMainPage()
    {

        NavigationManager.NavigateTo("/MainPage");

    }

    #endregion
}

