@page "/Login"
@using MudBlazor
@inject ISnackbar Snackbar

<MudContainer  Class="d-flex align-center justify-center pa-4 login-container" Style="min-height: 100vh;min-width:100%">
    <MudCard Class="pa-6 login-card" Style="width: 100%; max-width: 400px; box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.15), 0 10px 20px -10px rgba(0, 0, 0, 0.05); border-radius: 20px; backdrop-filter: blur(10px); border: 1px solid rgba(255, 255, 255, 0.1);">
        @* <MudCardMedia Image="https://via.placeholder.com/400x150/7e6fff/ffffff?text=Post+Office+Logo" Height="120" Class="rounded-t-2xl" /> *@

        <MudCardContent Style="text-align:center" Class="text-center">
            <MudText Typo="Typo.h4" Color="Color.Primary" Class="mb-2" Style="font-family: 'Vazir', sans-serif;">Welcome</MudText>
            <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-6 opacity-70">Please enter your login information to access the dashboard.</MudText>
        </MudCardContent>

        <MudCardContent>
            <!-- Input Fields -->
            <MudTextField @bind-Value="username"
                          Label="Email or Username"
                          Variant="Variant.Outlined"
                          Class="mb-4"
                          PrefixIcon="@Icons.Material.Filled.AlternateEmail"
                          Placeholder="Example: demo@example.com"
                          HelperText="Use a valid email address"
                          Required="true" />

            <MudTextField @bind-Value="password"
                          Label="Password"
                          Variant="Variant.Outlined"
                          Class="mb-4"
                          InputType="@(IsPasswordVisible ? InputType.Text : InputType.Password)"
                          PrefixIcon="@Icons.Material.Filled.Lock"
                          AdornmentIcon="@(IsPasswordVisible ? Icons.Material.Filled.Visibility : Icons.Material.Filled.VisibilityOff)"
                          AdornmentAriaLabel="Show/Hide Password"
                          OnAdornmentClick="@(() => IsPasswordVisible = !IsPasswordVisible)"
                          Placeholder="At least 8 characters"
                          HelperText="@(password.Length < 8 ? "Password must be at least 8 characters" : "")" />

            <div class="d-flex justify-space-between align-center mb-4">
                <MudCheckBox T="bool" @bind-Checked="rememberMe" Color="Color.Primary">
                    Remember me
                </MudCheckBox>
                <MudButton Variant="Variant.Text" Color="Color.Primary" Size="Size.Small" Href="/forgot-password">
                    Forgot Password?
                </MudButton>
            </div>

            <!-- Login Button -->
            <MudButton Variant="Variant.Filled"
                       Color="Color.Primary"
                       Size="Size.Large"
                       FullWidth="true"
                       Class="mb-4 rounded-xl"
                       StartIcon="@Icons.Material.Filled.Login"
                       OnClick="@(() => Snackbar.Add("Logging in... (Demo)", Severity.Info))">
                Log In
            </MudButton>

            <!-- Divider (اصلاح‌شده) -->
            <div class="or-divider">
                <MudDivider Style="width:25%" />
                <MudText Typo="Typo.caption" Class="mx-3" Color="Color.Secondary" Style="white-space: nowrap; min-width: 20px; text-align: center;">or</MudText>
                <MudDivider Style="width:25%" />
            </div>

            <!-- Social Login Buttons -->
            <MudButton Variant="Variant.Outlined"
                       Color="Color.Primary"
                       Size="Size.Large"
                       StartIcon="@Icons.Custom.Brands.Google"
                       FullWidth="true"
                       Class="mb-2 rounded-xl"
                       OnClick="@(() => Snackbar.Add("Sign in with Google (Demo)", Severity.Success))">
                Sign in with Google
            </MudButton>

            <MudButton Variant="Variant.Outlined"
                       Color="Color.Default"
                       Size="Size.Large"
                       StartIcon="@Icons.Custom.Brands.GitHub"
                       FullWidth="true"
                       Class="rounded-xl"
                       OnClick="@(() => Snackbar.Add("Sign in with GitHub (Demo)", Severity.Success))">
                Sign in with GitHub
            </MudButton>
        </MudCardContent>

        <MudCardActions Class="justify-center">
            <MudText Typo="Typo.caption" Color="Color.Secondary" Class="mr-2">Don't have an account?</MudText>
            <MudLink Href="/register" Underline="Underline.None" Color="Color.Primary" Typo="Typo.body2">
                Sign up
            </MudLink>
        </MudCardActions>
    </MudCard>
</MudContainer>


<style>

    .login-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
        position: relative;
        overflow: hidden;
    }

        .login-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.05"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
            pointer-events: none;
        }

    .login-card {
        animation: fadeInUp 0.6s ease-out;
        transform-origin: center;
    }

    @@keyframes fadeInUp {
        from

    {
        opacity: 0;
        transform: translateY(30px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .mud-input-outlined .mud-input-slot {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .mud-input-outlined:focus-within .mud-input-slot {
        transform: scale(1.02);
        box-shadow: 0 4px 12px rgba(126, 111, 255, 0.2);
    }

    .or-divider {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 1rem;
        width: 100%;
        margin-bottom: 1.5rem;
    }

        .or-divider .mud-divider-root {
            flex: 1;
            min-width: 100px; /* حداقل عرض برای جلوگیری از کوتاه شدن بیش از حد */
        }

</style>

@code {
    private string username = string.Empty;
    private string password = string.Empty;
    private bool rememberMe = false;
    private bool IsPasswordVisible { get; set; }

    // [Inject] private ISnackbar Snackbar { get; set; } = null!;
}